{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/backend-api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h2>\\n    {{ title }}\\n  </h2>\\n</div>\\n<ul>\\n  <div *ngFor=\\\"let item of list\\\">\\n    <li *ngIf=\\\"item.cognitive_biasLabel\\\">\\n      <h3>{{ item.cognitive_biasLabel }}</h3>\\n    </li>\\n  </div>\\n</ul>\\n\\n\"","import { Component } from '@angular/core';\nimport { BackendApiService } from './services/backend-api.service';\nimport { Observable } from \"rxjs\";\nimport { DetailModel } from './models/detail.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private backendApiService: BackendApiService) { \n    this.backendApiService.getList().subscribe(\n      data => {\n        console.log('data',data);\n        this.list = data['list'];\n      },\n      error => {\n        console.error('error',error);\n      }\n    );\n  }\n  title = 'List of Cognitive Bias';\n  list: DetailModel[];\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BackendApiService } from './services/backend-api.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [BackendApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ListModel } from '../models/list.model';\nimport { DetailModel } from '../models/detail.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendApiService {\n  private backendListUrl = '/api/list';\n  private backendDetailUrl = '/api/detail';\n\n  constructor (private  httpClient:  HttpClient) {}\n\n  // get(\"/api/contacts\")\n  getList() {\n    return this.httpClient.get<ListModel>(this.backendListUrl)\n      .pipe(data => data);\n  }\n\n  getDetail(detailId: String){\n    return this.httpClient.get<DetailModel>(this.backendDetailUrl + '/' + detailId)\n      .pipe(data => data);\n  }\n\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(errMsg);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}